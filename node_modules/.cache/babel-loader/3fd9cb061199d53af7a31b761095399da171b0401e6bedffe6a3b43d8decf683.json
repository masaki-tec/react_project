{"ast":null,"code":"var _jsxFileName = \"/Users/masaki/projects/react_project/react-project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const todoNameRef = useRef();\n\n  // ページ読み込み時に localStorage から読み込む\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n\n  //todos が変わったら localStorage に保存\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  const handleAddTodo = () => {\n    //タスクを追加する。\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos(prevTodos => {\n      return [...prevTodos, {\n        id: uuidv4(),\n        name: name,\n        completed: false\n      }];\n    });\n    todoNameRef.current.value = null;\n  };\n  const toggleTodo = id => {\n    const newTodos = [...todos];\n    const todo = newTodos.find(todo => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n  const handleClear = () => {\n    const newTodos = todos.filter(todo => !todo.completed);\n    setTodos(newTodos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleTodo: toggleTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: todoNameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"\\u30BF\\u30B9\\u30AF\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClear,\n      children: \"\\u5B8C\\u4E86\\u3057\\u305F\\u30BF\\u30B9\\u30AF\\u306E\\u524A\\u9664\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u6B8B\\u308A\\u306E\\u30BF\\u30B9\\u30AF:\", todos.filter(todo => !todo.completed).length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"qH2GEr92xkIFQxR2Djx4V7Ti/yU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","useEffect","TodoList","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","todos","setTodos","todoNameRef","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","handleAddTodo","name","current","value","prevTodos","id","completed","toggleTodo","newTodos","todo","find","handleClear","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onClick","length","_c","$RefreshReg$"],"sources":["/Users/masaki/projects/react_project/react-project/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [todos, setTodos]= useState([]);\n  \n  const todoNameRef = useRef();\n\n   // ページ読み込み時に localStorage から読み込む\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(\"todos\"));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n\n  //todos が変わったら localStorage に保存\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n\n  const handleAddTodo = () => {\n    //タスクを追加する。\n    const name = todoNameRef.current.value;\n    if (name === \"\") return;\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), name: name, completed: false }];\n    });\n    todoNameRef.current.value = null;\n  };\n\n  const toggleTodo = (id) => {\n    const newTodos = [...todos];\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.completed = !todo.completed;\n    setTodos(newTodos);\n  };\n\n  const handleClear = () => {\n    const newTodos = todos.filter((todo) =>  !todo.completed);\n    setTodos(newTodos);\n  };\n\n  return (\n  <div>\n    <h1>React Todo App</h1>\n    <TodoList todos={todos} toggleTodo={toggleTodo} />\n    <input type=\"text\" ref={todoNameRef} />\n    <button onClick={handleAddTodo}>タスクを追加</button>\n    <button onClick={handleClear}>完了したタスクの削除</button>\n    <div>残りのタスク:{todos.filter((todo) => !todo.completed).length}</div>\n  </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}