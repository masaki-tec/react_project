{"ast":null,"code":"var _jsxFileName = \"/Users/masaki/projects/react_project/react-project/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([{\n    id: 1,\n    name: \"Todo1\",\n    completed: false\n  }]);\n  const todoNameRef = useRef();\n  const handleAddTodo = () => {\n    //タスクを追加する。\n    const name = todoNameRef.current.value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: todoNameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTodo,\n      children: \"\\u30BF\\u30B9\\u30AF\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\u5B8C\\u4E86\\u3057\\u305F\\u30BF\\u30B9\\u30AF\\u306E\\u524A\\u9664\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u6B8B\\u308A\\u306E\\u30BF\\u30B9\\u30AF:0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"PnNK7Ptu5+vgIB1lX3pZtYKKBlk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useRef","TodoList","jsxDEV","_jsxDEV","App","_s","todos","setTodos","id","name","completed","todoNameRef","handleAddTodo","current","value","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","onClick","_c","$RefreshReg$"],"sources":["/Users/masaki/projects/react_project/react-project/src/App.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport TodoList from \"./TodoList\";\n\nfunction App() {\n  const [todos, setTodos]= useState([\n    { id: 1, name: \"Todo1\", completed: false },\n  ]);\n  \n  const todoNameRef = useRef();\n\n  const handleAddTodo = () => {\n    //タスクを追加する。\n    const name = todoNameRef.current.value;\n  };\n\n  return (\n  <div>\n    <TodoList todos={todos} />\n    <input type=\"text\" ref={todoNameRef} />\n    <button onClick={handleAddTodo}>タスクを追加</button>\n    <button>完了したタスクの削除</button>\n    <div>残りのタスク:0</div>\n  </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAER,QAAQ,CAAC,CAChC;IAAES,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAM,CAAC,CAC3C,CAAC;EAEF,MAAMC,WAAW,GAAGX,MAAM,CAAC,CAAC;EAE5B,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,MAAMH,IAAI,GAAGE,WAAW,CAACE,OAAO,CAACC,KAAK;EACxC,CAAC;EAED,oBACAX,OAAA;IAAAY,QAAA,gBACEZ,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA;IAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BhB,OAAA;MAAOiB,IAAI,EAAC,MAAM;MAACC,GAAG,EAAEV;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvChB,OAAA;MAAQmB,OAAO,EAAEV,aAAc;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/ChB,OAAA;MAAAY,QAAA,EAAQ;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3BhB,OAAA;MAAAY,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAER;AAACd,EAAA,CArBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAuBZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}